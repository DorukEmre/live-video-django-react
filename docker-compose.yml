name: livevideo

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        MODE: development
    image: django
    container_name: django
    ports:
      - $PORT:$PORT
    env_file:
      - .env
    environment:
      - PYTHONPATH=/usr/src/app/livevideo
    networks:
      - livevideo
    volumes:
      - ./backend:/usr/src/app
      # - ./frontend/dist:/usr/src/app/frontendDist # for production
    # depends_on:
    #   - postgres

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    image: react
    container_name: react
    ports:
      - 5173:5173
    env_file:
      - .env
    networks:
      - livevideo
    volumes:
      - /app/node_modules # to avoid overwriting node_modules
      - ./frontend:/app # for development (for live changes to be reflected)
    
  react_prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    image: react_prod
    container_name: react_prod
    ports: # for development
      - 5173:5173
    # expose: # for production
    #   - 5173
    env_file:
      - .env
    volumes:
      - /app/node_modules # to avoid overwriting node_modules
      - ./frontend/dist:/app/dist # for production (build directory)


  # postgres:
  #   image: postgres:16.4-alpine3.20
  #   container_name: postgres
  #   env_file:
  #     - .env
  #   environment:
  #     LC_COLLATE: en_US.UTF-8
  #     LC_CTYPE: en_US.UTF-8
  #   expose:
  #     - 5432
  #   working_dir: /var/lib/postgresql/data
  #   networks:
  #     - livevideo
  #   volumes:
  #     - postgres_database:/var/lib/postgresql/data
  #   restart: unless-stopped


# volumes:
#   postgres_database:
#     name: postgres_database
#     driver: local


networks:
  livevideo:
    name: livevideo
    driver: bridge
